(require 'multi-term)

(defun term-send-C-x ()
  "Type C-x in term-mode."
  (interactive "*")
  (term-send-raw-string "\C-x"))

(defvar term-unbind-key-list
  '("C-z" "C-x" "C-c" "C-h" "C-y" "<ESC>")
  "The key list that need to unbind.")

(setq term-bind-key-alist '(("C-c C-c"       . term-interrupt-subjob)
                            ("C-c C-z"       . term-stop-subjob)
                            ("C-c C-x"       . term-send-C-x)
                            ("C-c C-j"       . term-line-mode)
                            ("C-c C-k"       . term-char-mode)
                            ("C-a"           . term-send-home)
                            ("A-M-'"         . multi-term)
                            ("A-M-["         . multi-term-prev)
                            ("A-M-]"         . multi-term-next)
                            ("C-e"           . term-send-esc)
                            ("C-y"           . term-paste)
                            ("C-m"           . term-send-raw)
                            ("C-p"           . previous-line)
                            ("C-n"           . next-line)
                            ("C-s"           . isearch-forward)
                            ("C-r"           . isearch-backward)
                            ("M-f"           . term-send-forward-word)
                            ("M-b"           . term-send-backward-word)
                            ("M-o"           . term-send-backspace)
                            ("M-p"           . term-send-up)
                            ("M-n"           . term-send-down)
                            ("M-M"           . term-send-forward-kill-word)
                            ("M-N"           . term-send-backward-kill-word)
                            ("M-r"           . term-send-reverse-search-history)
                            ("M-,"           . term-send-input)
                            ("M-."           . comint-dynamic-complete)))
